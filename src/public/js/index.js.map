{
  "version": 3,
  "sources": ["../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/varint.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/proto-int64.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/text-encoding.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/binary-encoding.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/base64-encoding.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/descriptors.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/text-format.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/is-message.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/error.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/scalar.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/unsafe.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/guard.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/reflect-check.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wkt/wrappers.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/create.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/reflect/reflect.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/to-binary.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/from-binary.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/size-delimited.js", "../../../node_modules/@bufbuild/protobuf/dist/cjs/wire/index.js", "../../../node_modules/BOID-model/dist/typescript/typeRegistry.js", "../../../node_modules/BOID-model/dist/typescript/algorithm/schedule.js", "../../../node_modules/BOID-model/dist/typescript/common/authenticate.js", "../../../node_modules/BOID-model/dist/typescript/common/rule.js", "../../../node_modules/BOID-model/dist/typescript/common/world.js", "../../../node_modules/BOID-model/dist/typescript/llm/llm_rules_output.js", "../../../node_modules/BOID-model/dist/typescript/index.js", "../../views/ts/index.ts"],
  "sourcesContent": ["\"use strict\";\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.varint64read = varint64read;\nexports.varint64write = varint64write;\nexports.int64FromString = int64FromString;\nexports.int64ToString = int64ToString;\nexports.uInt64ToString = uInt64ToString;\nexports.varint32write = varint32write;\nexports.varint32read = varint32read;\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return (digitC.toString() +\n        decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA));\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoInt64 = void 0;\nconst varint_js_1 = require(\"./wire/varint.js\");\n/**\n * Int64Support for the current environment.\n */\nexports.protoInt64 = makeInt64Support();\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`invalid int64: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`invalid uint64: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0, varint_js_1.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0, varint_js_1.uInt64ToString)(lo, hi);\n        },\n    };\n}\nfunction assertInt64String(value) {\n    if (!/^-?[0-9]+$/.test(value)) {\n        throw new Error(\"invalid int64: \" + value);\n    }\n}\nfunction assertUInt64String(value) {\n    if (!/^[0-9]+$/.test(value)) {\n        throw new Error(\"invalid uint64: \" + value);\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configureTextEncoding = configureTextEncoding;\nexports.getTextEncoding = getTextEncoding;\nconst symbol = Symbol.for(\"@bufbuild/protobuf/text-encoding\");\n/**\n * Protobuf-ES requires the Text Encoding API to convert UTF-8 from and to\n * binary. This WHATWG API is widely available, but it is not part of the\n * ECMAScript standard. On runtimes where it is not available, use this\n * function to provide your own implementation.\n *\n * Note that the Text Encoding API does not provide a way to validate UTF-8.\n * Our implementation falls back to use encodeURIComponent().\n */\nfunction configureTextEncoding(textEncoding) {\n    globalThis[symbol] = textEncoding;\n}\nfunction getTextEncoding() {\n    if (globalThis[symbol] == undefined) {\n        const te = new globalThis.TextEncoder();\n        const td = new globalThis.TextDecoder();\n        globalThis[symbol] = {\n            encodeUtf8(text) {\n                return te.encode(text);\n            },\n            decodeUtf8(bytes) {\n                return td.decode(bytes);\n            },\n            checkUtf8(text) {\n                try {\n                    encodeURIComponent(text);\n                    return true;\n                }\n                catch (e) {\n                    return false;\n                }\n            },\n        };\n    }\n    return globalThis[symbol];\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryReader = exports.BinaryWriter = exports.INT32_MIN = exports.INT32_MAX = exports.UINT32_MAX = exports.FLOAT32_MIN = exports.FLOAT32_MAX = exports.WireType = void 0;\nconst varint_js_1 = require(\"./varint.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst text_encoding_js_1 = require(\"./text-encoding.js\");\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (exports.WireType = WireType = {}));\n/**\n * Maximum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexports.FLOAT32_MAX = 3.4028234663852886e38;\n/**\n * Minimum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexports.FLOAT32_MIN = -3.4028234663852886e38;\n/**\n * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).\n */\nexports.UINT32_MAX = 0xffffffff;\n/**\n * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexports.INT32_MAX = 0x7fffffff;\n/**\n * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexports.INT32_MIN = -0x80000000;\nclass BinaryWriter {\n    constructor(encodeUtf8 = (0, text_encoding_js_1.getTextEncoding)().encodeUtf8) {\n        this.encodeUtf8 = encodeUtf8;\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.encodeUtf8(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0, varint_js_1.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = proto_int64_js_1.protoInt64.uEnc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nclass BinaryReader {\n    constructor(buf, decodeUtf8 = (0, text_encoding_js_1.getTextEncoding)().decodeUtf8) {\n        this.decodeUtf8 = decodeUtf8;\n        this.varint64 = varint_js_1.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint_js_1.varint32read;\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-expect-error TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line no-fallthrough\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return proto_int64_js_1.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return proto_int64_js_1.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return proto_int64_js_1.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return proto_int64_js_1.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return proto_int64_js_1.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.decodeUtf8(this.bytes());\n    }\n}\nexports.BinaryReader = BinaryReader;\n/**\n * Assert a valid signed protobuf 32-bit integer as a number or string.\n */\nfunction assertInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid int32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > exports.INT32_MAX ||\n        arg < exports.INT32_MIN)\n        throw new Error(\"invalid int32: \" + arg);\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer as a number or string.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid uint32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > exports.UINT32_MAX ||\n        arg < 0)\n        throw new Error(\"invalid uint32: \" + arg);\n}\n/**\n * Assert a valid protobuf float value as a number or string.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg == \"string\") {\n        const o = arg;\n        arg = Number(arg);\n        if (isNaN(arg) && o !== \"NaN\") {\n            throw new Error(\"invalid float32: \" + o);\n        }\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid float32: \" + typeof arg);\n    }\n    if (Number.isFinite(arg) &&\n        (arg > exports.FLOAT32_MAX || arg < exports.FLOAT32_MIN))\n        throw new Error(\"invalid float32: \" + arg);\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nfunction base64Decode(base64Str) {\n    const table = getDecodeTable();\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = (base64Str.length * 3) / 4;\n    if (base64Str[base64Str.length - 2] == \"=\")\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == \"=\")\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // previous byte\n    for (let i = 0; i < base64Str.length; i++) {\n        b = table[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            switch (base64Str[i]) {\n                // @ts-expect-error TS7029: Fallthrough case in switch\n                case \"=\":\n                    groupPos = 0; // reset state when padding found\n                // eslint-disable-next-line no-fallthrough\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\t\":\n                case \" \":\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(\"invalid base64 string\");\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = ((p & 3) << 6) | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(\"invalid base64 string\");\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encode a byte array to a base64 string.\n *\n * By default, this function uses the standard base64 encoding with padding.\n *\n * To encode without padding, use encoding = \"std_raw\".\n *\n * To encode with the URL encoding, use encoding = \"url\", which replaces the\n * characters +/ by their URL-safe counterparts -_, and omits padding.\n */\nfunction base64Encode(bytes, encoding = \"std\") {\n    const table = getEncodeTable(encoding);\n    const pad = encoding == \"std\";\n    let base64 = \"\", groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += table[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += table[p | (b >> 4)];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += table[p | (b >> 6)];\n                base64 += table[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // add output padding\n    if (groupPos) {\n        base64 += table[p];\n        if (pad) {\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n    }\n    return base64;\n}\n// lookup table from base64 character to byte\nlet encodeTableStd;\nlet encodeTableUrl;\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decodeTable;\nfunction getEncodeTable(encoding) {\n    if (!encodeTableStd) {\n        encodeTableStd =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n        encodeTableUrl = encodeTableStd.slice(0, -2).concat(\"-\", \"_\");\n    }\n    return encoding == \"url\" ? encodeTableUrl : encodeTableStd;\n}\nfunction getDecodeTable() {\n    if (!decodeTable) {\n        decodeTable = [];\n        const encodeTable = getEncodeTable(\"std\");\n        for (let i = 0; i < encodeTable.length; i++)\n            decodeTable[encodeTable[i].charCodeAt(0)] = i;\n        // support base64url variants\n        decodeTable[\"-\".charCodeAt(0)] = encodeTable.indexOf(\"+\");\n        decodeTable[\"_\".charCodeAt(0)] = encodeTable.indexOf(\"/\");\n    }\n    return decodeTable;\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScalarType = void 0;\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (exports.ScalarType = ScalarType = {}));\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTextFormatEnumValue = parseTextFormatEnumValue;\nexports.parseTextFormatScalarValue = parseTextFormatScalarValue;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n/**\n * Parse an enum value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatEnumValue(descEnum, value) {\n    const enumValue = descEnum.values.find((v) => v.name === value);\n    if (!enumValue) {\n        throw new Error(`cannot parse ${descEnum} default value: ${value}`);\n    }\n    return enumValue.number;\n}\n/**\n * Parse a scalar value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatScalarValue(type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return value;\n        case descriptors_js_1.ScalarType.BYTES: {\n            const u = unescapeBytesDefaultValue(value);\n            if (u === false) {\n                throw new Error(`cannot parse ${descriptors_js_1.ScalarType[type]} default value: ${value}`);\n            }\n            return u;\n        }\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            return proto_int64_js_1.protoInt64.parse(value);\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            return proto_int64_js_1.protoInt64.uParse(value);\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FLOAT:\n            switch (value) {\n                case \"inf\":\n                    return Number.POSITIVE_INFINITY;\n                case \"-inf\":\n                    return Number.NEGATIVE_INFINITY;\n                case \"nan\":\n                    return Number.NaN;\n                default:\n                    return parseFloat(value);\n            }\n        case descriptors_js_1.ScalarType.BOOL:\n            return value === \"true\";\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.UINT32:\n        case descriptors_js_1.ScalarType.SINT32:\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n            return parseInt(value, 10);\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = proto_int64_js_1.protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMessage = isMessage;\n/**\n * Determine whether the given `arg` is a message.\n * If `desc` is set, determine whether `arg` is this specific message.\n */\nfunction isMessage(arg, schema) {\n    const isMessage = arg !== null &&\n        typeof arg == \"object\" &&\n        \"$typeName\" in arg &&\n        typeof arg.$typeName == \"string\";\n    if (!isMessage) {\n        return false;\n    }\n    if (schema === undefined) {\n        return true;\n    }\n    return schema.typeName === arg.$typeName;\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldError = void 0;\nexports.isFieldError = isFieldError;\nconst errorNames = [\n    \"FieldValueInvalidError\",\n    \"FieldListRangeError\",\n    \"ForeignFieldError\",\n];\nclass FieldError extends Error {\n    constructor(fieldOrOneof, message, name = \"FieldValueInvalidError\") {\n        super(message);\n        this.name = name;\n        this.field = () => fieldOrOneof;\n    }\n}\nexports.FieldError = FieldError;\nfunction isFieldError(arg) {\n    return (arg instanceof Error &&\n        errorNames.includes(arg.name) &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\");\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scalarEquals = scalarEquals;\nexports.scalarZeroValue = scalarZeroValue;\nexports.isScalarZeroValue = isScalarZeroValue;\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst descriptors_js_1 = require(\"../descriptors.js\");\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == descriptors_js_1.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longAsString) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return \"\";\n        case descriptors_js_1.ScalarType.BOOL:\n            return false;\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FLOAT:\n            return 0.0;\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            return (longAsString ? \"0\" : proto_int64_js_1.protoInt64.zero);\n        case descriptors_js_1.ScalarType.BYTES:\n            return new Uint8Array(0);\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.BOOL:\n            return value === false;\n        case descriptors_js_1.ScalarType.STRING:\n            return value === \"\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unsafeLocal = void 0;\nexports.unsafeOneofCase = unsafeOneofCase;\nexports.unsafeIsSet = unsafeIsSet;\nexports.unsafeIsSetExplicit = unsafeIsSetExplicit;\nexports.unsafeGet = unsafeGet;\nexports.unsafeSet = unsafeSet;\nexports.unsafeClear = unsafeClear;\nconst scalar_js_1 = require(\"./scalar.js\");\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\nexports.unsafeLocal = Symbol.for(\"reflect unsafe local\");\n/**\n * Return the selected field of a oneof group.\n *\n * @private\n */\nfunction unsafeOneofCase(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\noneof) {\n    const c = target[oneof.localName].case;\n    if (c === undefined) {\n        return c;\n    }\n    return oneof.fields.find((f) => f.localName === c);\n}\n/**\n * Returns true if the field is set.\n *\n * @private\n */\nfunction unsafeIsSet(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nfield) {\n    const name = field.localName;\n    if (field.oneof) {\n        return target[field.oneof.localName].case === name; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3).\n        return (target[name] !== undefined &&\n            Object.prototype.hasOwnProperty.call(target, name));\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.fieldKind) {\n        case \"list\":\n            return target[name].length > 0;\n        case \"map\":\n            return Object.keys(target[name]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n        case \"scalar\":\n            return !(0, scalar_js_1.isScalarZeroValue)(field.scalar, target[name]);\n        case \"enum\":\n            return target[name] !== field.enum.values[0].number;\n    }\n    throw new Error(\"message field with implicit presence\");\n}\n/**\n * Returns true if the field is set, but only for singular fields with explicit\n * presence (proto2).\n *\n * @private\n */\nfunction unsafeIsSetExplicit(target, localName) {\n    return (Object.prototype.hasOwnProperty.call(target, localName) &&\n        target[localName] !== undefined);\n}\n/**\n * Return a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeGet(target, field) {\n    if (field.oneof) {\n        const oneof = target[field.oneof.localName];\n        if (oneof.case === field.localName) {\n            return oneof.value;\n        }\n        return undefined;\n    }\n    return target[field.localName];\n}\n/**\n * Set a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeSet(target, field, value) {\n    if (field.oneof) {\n        target[field.oneof.localName] = {\n            case: field.localName,\n            value: value,\n        };\n    }\n    else {\n        target[field.localName] = value;\n    }\n}\n/**\n * Resets the field, so that unsafeIsSet() will return false.\n *\n * @private\n */\nfunction unsafeClear(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nfield) {\n    const name = field.localName;\n    if (field.oneof) {\n        const oneofLocalName = field.oneof.localName;\n        if (target[oneofLocalName].case === name) {\n            target[oneofLocalName] = { case: undefined };\n        }\n    }\n    else if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3). By deleting their own\n        // property, the field is reset.\n        delete target[name];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (field.fieldKind) {\n            case \"map\":\n                target[name] = {};\n                break;\n            case \"list\":\n                target[name] = [];\n                break;\n            case \"enum\":\n                target[name] = field.enum.values[0].number;\n                break;\n            case \"scalar\":\n                target[name] = (0, scalar_js_1.scalarZeroValue)(field.scalar, field.longAsString);\n                break;\n        }\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = isObject;\nexports.isOneofADT = isOneofADT;\nexports.isReflectList = isReflectList;\nexports.isReflectMap = isReflectMap;\nexports.isReflectMessage = isReflectMessage;\nconst unsafe_js_1 = require(\"./unsafe.js\");\nfunction isObject(arg) {\n    return arg !== null && typeof arg == \"object\" && !Array.isArray(arg);\n}\nfunction isOneofADT(arg) {\n    return (arg !== null &&\n        typeof arg == \"object\" &&\n        \"case\" in arg &&\n        ((typeof arg.case == \"string\" && \"value\" in arg && arg.value != null) ||\n            (arg.case === undefined &&\n                (!(\"value\" in arg) || arg.value === undefined))));\n}\nfunction isReflectList(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"add\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.listKind == b.listKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMap(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"has\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.mapKey === b.mapKey &&\n                a.mapKind == b.mapKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMessage(arg, messageDesc) {\n    return (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"desc\" in arg &&\n        isObject(arg.desc) &&\n        arg.desc.kind === \"message\" &&\n        (messageDesc === undefined || arg.desc.typeName == messageDesc.typeName));\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkField = checkField;\nexports.checkListItem = checkListItem;\nexports.checkMapEntry = checkMapEntry;\nexports.formatVal = formatVal;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst is_message_js_1 = require(\"../is-message.js\");\nconst error_js_1 = require(\"./error.js\");\nconst guard_js_1 = require(\"./guard.js\");\nconst binary_encoding_js_1 = require(\"../wire/binary-encoding.js\");\nconst text_encoding_js_1 = require(\"../wire/text-encoding.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\n/**\n * Check whether the given field value is valid for the reflect API.\n */\nfunction checkField(field, value) {\n    const check = field.fieldKind == \"list\"\n        ? (0, guard_js_1.isReflectList)(value, field)\n        : field.fieldKind == \"map\"\n            ? (0, guard_js_1.isReflectMap)(value, field)\n            : checkSingular(field, value);\n    if (check === true) {\n        return undefined;\n    }\n    let reason;\n    switch (field.fieldKind) {\n        case \"list\":\n            reason = `expected ${formatReflectList(field)}, got ${formatVal(value)}`;\n            break;\n        case \"map\":\n            reason = `expected ${formatReflectMap(field)}, got ${formatVal(value)}`;\n            break;\n        default: {\n            reason = reasonSingular(field, value, check);\n        }\n    }\n    return new error_js_1.FieldError(field, reason);\n}\n/**\n * Check whether the given list item is valid for the reflect API.\n */\nfunction checkListItem(field, index, value) {\n    const check = checkSingular(field, value);\n    if (check !== true) {\n        return new error_js_1.FieldError(field, `list item #${index + 1}: ${reasonSingular(field, value, check)}`);\n    }\n    return undefined;\n}\n/**\n * Check whether the given map key and value are valid for the reflect API.\n */\nfunction checkMapEntry(field, key, value) {\n    const checkKey = checkScalarValue(key, field.mapKey);\n    if (checkKey !== true) {\n        return new error_js_1.FieldError(field, `invalid map key: ${reasonSingular({ scalar: field.mapKey }, key, checkKey)}`);\n    }\n    const checkVal = checkSingular(field, value);\n    if (checkVal !== true) {\n        return new error_js_1.FieldError(field, `map entry ${formatVal(key)}: ${reasonSingular(field, value, checkVal)}`);\n    }\n    return undefined;\n}\nfunction checkSingular(field, value) {\n    if (field.scalar !== undefined) {\n        return checkScalarValue(value, field.scalar);\n    }\n    if (field.enum !== undefined) {\n        if (field.enum.open) {\n            return Number.isInteger(value);\n        }\n        return field.enum.values.some((v) => v.number === value);\n    }\n    return (0, guard_js_1.isReflectMessage)(value, field.message);\n}\nfunction checkScalarValue(value, scalar) {\n    switch (scalar) {\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return typeof value == \"number\";\n        case descriptors_js_1.ScalarType.FLOAT:\n            if (typeof value != \"number\") {\n                return false;\n            }\n            if (Number.isNaN(value) || !Number.isFinite(value)) {\n                return true;\n            }\n            if (value > binary_encoding_js_1.FLOAT32_MAX || value < binary_encoding_js_1.FLOAT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32:\n            // signed\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > binary_encoding_js_1.INT32_MAX || value < binary_encoding_js_1.INT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n            // unsigned\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > binary_encoding_js_1.UINT32_MAX || value < 0) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.BOOL:\n            return typeof value == \"boolean\";\n        case descriptors_js_1.ScalarType.STRING:\n            if (typeof value != \"string\") {\n                return false;\n            }\n            return (0, text_encoding_js_1.getTextEncoding)().checkUtf8(value) || \"invalid UTF8\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return value instanceof Uint8Array;\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            // signed\n            if (typeof value != \"string\" &&\n                typeof value !== \"bigint\" &&\n                typeof value !== \"number\") {\n                return false;\n            }\n            try {\n                proto_int64_js_1.protoInt64.parse(value);\n            }\n            catch (e) {\n                return `${value} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            // unsigned\n            if (typeof value != \"string\" &&\n                typeof value !== \"bigint\" &&\n                typeof value !== \"number\") {\n                return false;\n            }\n            try {\n                proto_int64_js_1.protoInt64.uParse(value);\n            }\n            catch (e) {\n                return `${value} out of range`;\n            }\n            return true;\n    }\n}\nfunction reasonSingular(field, val, details) {\n    details =\n        typeof details == \"string\" ? `: ${details}` : `, got ${formatVal(val)}`;\n    if (field.scalar !== undefined) {\n        return `expected ${scalarTypeDescription(field.scalar)}` + details;\n    }\n    else if (field.enum !== undefined) {\n        return `expected ${field.enum.toString()}` + details;\n    }\n    return `expected ${formatReflectMessage(field.message)}` + details;\n}\nfunction formatVal(val) {\n    switch (typeof val) {\n        case \"object\":\n            if (val === null) {\n                return \"null\";\n            }\n            if (val instanceof Uint8Array) {\n                return `Uint8Array(${val.length})`;\n            }\n            if (Array.isArray(val)) {\n                return `Array(${val.length})`;\n            }\n            if ((0, guard_js_1.isReflectList)(val)) {\n                return formatReflectList(val.field());\n            }\n            if ((0, guard_js_1.isReflectMap)(val)) {\n                return formatReflectMap(val.field());\n            }\n            if ((0, guard_js_1.isReflectMessage)(val)) {\n                return formatReflectMessage(val.desc);\n            }\n            if ((0, is_message_js_1.isMessage)(val)) {\n                return `message ${val.$typeName}`;\n            }\n            return \"object\";\n        case \"string\":\n            return val.length > 30 ? \"string\" : `\"${val.split('\"').join('\\\\\"')}\"`;\n        case \"boolean\":\n            return String(val);\n        case \"number\":\n            return String(val);\n        case \"bigint\":\n            return String(val) + \"n\";\n        default:\n            // \"symbol\" | \"undefined\" | \"object\" | \"function\"\n            return typeof val;\n    }\n}\nfunction formatReflectMessage(desc) {\n    return `ReflectMessage (${desc.typeName})`;\n}\nfunction formatReflectList(field) {\n    switch (field.listKind) {\n        case \"message\":\n            return `ReflectList (${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectList (${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectList (${descriptors_js_1.ScalarType[field.scalar]})`;\n    }\n}\nfunction formatReflectMap(field) {\n    switch (field.mapKind) {\n        case \"message\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${descriptors_js_1.ScalarType[field.scalar]})`;\n    }\n}\nfunction scalarTypeDescription(scalar) {\n    switch (scalar) {\n        case descriptors_js_1.ScalarType.STRING:\n            return \"string\";\n        case descriptors_js_1.ScalarType.BOOL:\n            return \"boolean\";\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SINT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return \"bigint (int64)\";\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            return \"bigint (uint64)\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return \"Uint8Array\";\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return \"number (float64)\";\n        case descriptors_js_1.ScalarType.FLOAT:\n            return \"number (float32)\";\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n            return \"number (uint32)\";\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32:\n            return \"number (int32)\";\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapper = isWrapper;\nexports.isWrapperDesc = isWrapperDesc;\nfunction isWrapper(arg) {\n    return isWrapperTypeName(arg.$typeName);\n}\nfunction isWrapperDesc(messageDesc) {\n    const f = messageDesc.fields[0];\n    return (isWrapperTypeName(messageDesc.typeName) &&\n        f !== undefined &&\n        f.fieldKind == \"scalar\" &&\n        f.name == \"value\" &&\n        f.number == 1);\n}\nfunction isWrapperTypeName(name) {\n    return (name.startsWith(\"google.protobuf.\") &&\n        [\n            \"DoubleValue\",\n            \"FloatValue\",\n            \"Int64Value\",\n            \"UInt64Value\",\n            \"Int32Value\",\n            \"UInt32Value\",\n            \"BoolValue\",\n            \"StringValue\",\n            \"BytesValue\",\n        ].includes(name.substring(16)));\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create = create;\nconst is_message_js_1 = require(\"./is-message.js\");\nconst descriptors_js_1 = require(\"./descriptors.js\");\nconst scalar_js_1 = require(\"./reflect/scalar.js\");\nconst guard_js_1 = require(\"./reflect/guard.js\");\nconst unsafe_js_1 = require(\"./reflect/unsafe.js\");\nconst wrappers_js_1 = require(\"./wkt/wrappers.js\");\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n/**\n * Create a new message instance.\n *\n * The second argument is an optional initializer object, where all fields are\n * optional.\n */\nfunction create(schema, init) {\n    if ((0, is_message_js_1.isMessage)(init, schema)) {\n        return init;\n    }\n    const message = createZeroMessage(schema);\n    if (init !== undefined) {\n        initMessage(schema, message, init);\n    }\n    return message;\n}\n/**\n * Sets field values from a MessageInitShape on a zero message.\n */\nfunction initMessage(messageDesc, message, init) {\n    for (const member of messageDesc.members) {\n        let value = init[member.localName];\n        if (value == null) {\n            // intentionally ignore undefined and null\n            continue;\n        }\n        let field;\n        if (member.kind == \"oneof\") {\n            const oneofField = (0, unsafe_js_1.unsafeOneofCase)(init, member);\n            if (!oneofField) {\n                continue;\n            }\n            field = oneofField;\n            value = (0, unsafe_js_1.unsafeGet)(init, oneofField);\n        }\n        else {\n            field = member;\n        }\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- no need to convert enum\n        switch (field.fieldKind) {\n            case \"message\":\n                value = toMessage(field, value);\n                break;\n            case \"scalar\":\n                value = initScalar(field, value);\n                break;\n            case \"list\":\n                value = initList(field, value);\n                break;\n            case \"map\":\n                value = initMap(field, value);\n                break;\n        }\n        (0, unsafe_js_1.unsafeSet)(message, field, value);\n    }\n    return message;\n}\nfunction initScalar(field, value) {\n    if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n        return toU8Arr(value);\n    }\n    return value;\n}\nfunction initMap(field, value) {\n    if ((0, guard_js_1.isObject)(value)) {\n        if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n            return convertObjectValues(value, toU8Arr);\n        }\n        if (field.mapKind == \"message\") {\n            return convertObjectValues(value, (val) => toMessage(field, val));\n        }\n    }\n    return value;\n}\nfunction initList(field, value) {\n    if (Array.isArray(value)) {\n        if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n            return value.map(toU8Arr);\n        }\n        if (field.listKind == \"message\") {\n            return value.map((item) => toMessage(field, item));\n        }\n    }\n    return value;\n}\nfunction toMessage(field, value) {\n    if (field.fieldKind == \"message\" &&\n        !field.oneof &&\n        (0, wrappers_js_1.isWrapperDesc)(field.message)) {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return initScalar(field.message.fields[0], value);\n    }\n    if ((0, guard_js_1.isObject)(value)) {\n        if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName !== \"google.protobuf.Value\") {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            return value;\n        }\n        if (!(0, is_message_js_1.isMessage)(value, field.message)) {\n            return create(field.message, value);\n        }\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(value) {\n    return Array.isArray(value) ? new Uint8Array(value) : value;\n}\nfunction convertObjectValues(obj, fn) {\n    const ret = {};\n    for (const entry of Object.entries(obj)) {\n        ret[entry[0]] = fn(entry[1]);\n    }\n    return ret;\n}\nconst tokenZeroMessageField = Symbol();\nconst messagePrototypes = new WeakMap();\n/**\n * Create a zero message.\n */\nfunction createZeroMessage(desc) {\n    let msg;\n    if (!needsPrototypeChain(desc)) {\n        msg = {\n            $typeName: desc.typeName,\n        };\n        for (const member of desc.members) {\n            if (member.kind == \"oneof\" || member.presence == IMPLICIT) {\n                msg[member.localName] = createZeroField(member);\n            }\n        }\n    }\n    else {\n        // Support default values and track presence via the prototype chain\n        const cached = messagePrototypes.get(desc);\n        let prototype;\n        let members;\n        if (cached) {\n            ({ prototype, members } = cached);\n        }\n        else {\n            prototype = {};\n            members = new Set();\n            for (const member of desc.members) {\n                if (member.kind == \"oneof\") {\n                    // we can only put immutable values on the prototype,\n                    // oneof ADTs are mutable\n                    continue;\n                }\n                if (member.fieldKind != \"scalar\" && member.fieldKind != \"enum\") {\n                    // only scalar and enum values are immutable, map, list, and message\n                    // are not\n                    continue;\n                }\n                if (member.presence == IMPLICIT) {\n                    // implicit presence tracks field presence by zero values - e.g. 0, false, \"\", are unset, 1, true, \"x\" are set.\n                    // message, map, list fields are mutable, and also have IMPLICIT presence.\n                    continue;\n                }\n                members.add(member);\n                prototype[member.localName] = createZeroField(member);\n            }\n            messagePrototypes.set(desc, { prototype, members });\n        }\n        msg = Object.create(prototype);\n        msg.$typeName = desc.typeName;\n        for (const member of desc.members) {\n            if (members.has(member)) {\n                continue;\n            }\n            if (member.kind == \"field\") {\n                if (member.fieldKind == \"message\") {\n                    continue;\n                }\n                if (member.fieldKind == \"scalar\" || member.fieldKind == \"enum\") {\n                    if (member.presence != IMPLICIT) {\n                        continue;\n                    }\n                }\n            }\n            msg[member.localName] = createZeroField(member);\n        }\n    }\n    return msg;\n}\n/**\n * Do we need the prototype chain to track field presence?\n */\nfunction needsPrototypeChain(desc) {\n    switch (desc.file.edition) {\n        case EDITION_PROTO3:\n            // proto3 always uses implicit presence, we never need the prototype chain.\n            return false;\n        case EDITION_PROTO2:\n            // proto2 never uses implicit presence, we always need the prototype chain.\n            return true;\n        default:\n            // If a message uses scalar or enum fields with explicit presence, we need\n            // the prototype chain to track presence. This rule does not apply to fields\n            // in a oneof group - they use a different mechanism to track presence.\n            return desc.fields.some((f) => f.presence != IMPLICIT && f.fieldKind != \"message\" && !f.oneof);\n    }\n}\n/**\n * Returns a zero value for oneof groups, and for every field kind except\n * messages. Scalar and enum fields can have default values.\n */\nfunction createZeroField(field) {\n    if (field.kind == \"oneof\") {\n        return { case: undefined };\n    }\n    if (field.fieldKind == \"list\") {\n        return [];\n    }\n    if (field.fieldKind == \"map\") {\n        return {}; // Object.create(null) would be desirable here, but is unsupported by react https://react.dev/reference/react/use-server#serializable-parameters-and-return-values\n    }\n    if (field.fieldKind == \"message\") {\n        return tokenZeroMessageField;\n    }\n    const defaultValue = field.getDefaultValue();\n    if (defaultValue !== undefined) {\n        return field.fieldKind == \"scalar\" && field.longAsString\n            ? defaultValue.toString()\n            : defaultValue;\n    }\n    return field.fieldKind == \"scalar\"\n        ? (0, scalar_js_1.scalarZeroValue)(field.scalar, field.longAsString)\n        : field.enum.values[0].number;\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reflect = reflect;\nexports.reflectList = reflectList;\nexports.reflectMap = reflectMap;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst reflect_check_js_1 = require(\"./reflect-check.js\");\nconst error_js_1 = require(\"./error.js\");\nconst unsafe_js_1 = require(\"./unsafe.js\");\nconst create_js_1 = require(\"../create.js\");\nconst wrappers_js_1 = require(\"../wkt/wrappers.js\");\nconst scalar_js_1 = require(\"./scalar.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst guard_js_1 = require(\"./guard.js\");\n/**\n * Create a ReflectMessage.\n */\nfunction reflect(messageDesc, message, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMessageImpl(messageDesc, message, check);\n}\nclass ReflectMessageImpl {\n    get sortedFields() {\n        var _a;\n        return ((_a = this._sortedFields) !== null && _a !== void 0 ? _a : (this._sortedFields = this.desc.fields\n            .concat()\n            .sort((a, b) => a.number - b.number)));\n    }\n    constructor(messageDesc, message, check = true) {\n        this.lists = new Map();\n        this.maps = new Map();\n        this.check = check;\n        this.desc = messageDesc;\n        this.message = this[unsafe_js_1.unsafeLocal] = message !== null && message !== void 0 ? message : (0, create_js_1.create)(messageDesc);\n        this.fields = messageDesc.fields;\n        this.oneofs = messageDesc.oneofs;\n        this.members = messageDesc.members;\n    }\n    findNumber(number) {\n        if (!this._fieldsByNumber) {\n            this._fieldsByNumber = new Map(this.desc.fields.map((f) => [f.number, f]));\n        }\n        return this._fieldsByNumber.get(number);\n    }\n    oneofCase(oneof) {\n        assertOwn(this.message, oneof);\n        return (0, unsafe_js_1.unsafeOneofCase)(this.message, oneof);\n    }\n    isSet(field) {\n        assertOwn(this.message, field);\n        return (0, unsafe_js_1.unsafeIsSet)(this.message, field);\n    }\n    clear(field) {\n        assertOwn(this.message, field);\n        (0, unsafe_js_1.unsafeClear)(this.message, field);\n    }\n    get(field) {\n        assertOwn(this.message, field);\n        const value = (0, unsafe_js_1.unsafeGet)(this.message, field);\n        switch (field.fieldKind) {\n            case \"list\":\n                // eslint-disable-next-line no-case-declarations\n                let list = this.lists.get(field);\n                if (!list || list[unsafe_js_1.unsafeLocal] !== value) {\n                    this.lists.set(field, (list = new ReflectListImpl(field, value, this.check)));\n                }\n                return list;\n            case \"map\":\n                // eslint-disable-next-line no-case-declarations\n                let map = this.maps.get(field);\n                if (!map || map[unsafe_js_1.unsafeLocal] !== value) {\n                    this.maps.set(field, (map = new ReflectMapImpl(field, value, this.check)));\n                }\n                return map;\n            case \"message\":\n                return messageToReflect(field, value, this.check);\n            case \"scalar\":\n                return (value === undefined\n                    ? (0, scalar_js_1.scalarZeroValue)(field.scalar, false)\n                    : longToReflect(field, value));\n            case \"enum\":\n                return (value !== null && value !== void 0 ? value : field.enum.values[0].number);\n        }\n    }\n    set(field, value) {\n        assertOwn(this.message, field);\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkField)(field, value);\n            if (err) {\n                throw err;\n            }\n        }\n        let local;\n        if (field.fieldKind == \"message\") {\n            local = messageToLocal(field, value);\n        }\n        else if ((0, guard_js_1.isReflectMap)(value) || (0, guard_js_1.isReflectList)(value)) {\n            local = value[unsafe_js_1.unsafeLocal];\n        }\n        else {\n            local = longToLocal(field, value);\n        }\n        (0, unsafe_js_1.unsafeSet)(this.message, field, local);\n    }\n    getUnknown() {\n        return this.message.$unknown;\n    }\n    setUnknown(value) {\n        this.message.$unknown = value;\n    }\n}\nfunction assertOwn(owner, member) {\n    if (member.parent.typeName !== owner.$typeName) {\n        throw new error_js_1.FieldError(member, `cannot use ${member.toString()} with message ${owner.$typeName}`, \"ForeignFieldError\");\n    }\n}\n/**\n * Create a ReflectList.\n */\nfunction reflectList(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectListImpl(field, unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : [], check);\n}\nclass ReflectListImpl {\n    field() {\n        return this._field;\n    }\n    get size() {\n        return this._arr.length;\n    }\n    constructor(field, unsafeInput, check) {\n        this._field = field;\n        this._arr = this[unsafe_js_1.unsafeLocal] = unsafeInput;\n        this.check = check;\n    }\n    get(index) {\n        const item = this._arr[index];\n        return item === undefined\n            ? undefined\n            : listItemToReflect(this._field, item, this.check);\n    }\n    set(index, item) {\n        if (index < 0 || index >= this._arr.length) {\n            throw new error_js_1.FieldError(this._field, `list item #${index + 1}: out of range`);\n        }\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkListItem)(this._field, index, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr[index] = listItemToLocal(this._field, item);\n    }\n    add(item) {\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkListItem)(this._field, this._arr.length, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr.push(listItemToLocal(this._field, item));\n        return undefined;\n    }\n    clear() {\n        this._arr.splice(0, this._arr.length);\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    keys() {\n        return this._arr.keys();\n    }\n    *values() {\n        for (const item of this._arr) {\n            yield listItemToReflect(this._field, item, this.check);\n        }\n    }\n    *entries() {\n        for (let i = 0; i < this._arr.length; i++) {\n            yield [i, listItemToReflect(this._field, this._arr[i], this.check)];\n        }\n    }\n}\n/**\n * Create a ReflectMap.\n */\nfunction reflectMap(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMapImpl(field, unsafeInput, check);\n}\nclass ReflectMapImpl {\n    constructor(field, unsafeInput, check = true) {\n        this.obj = this[unsafe_js_1.unsafeLocal] = unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : {};\n        this.check = check;\n        this._field = field;\n    }\n    field() {\n        return this._field;\n    }\n    set(key, value) {\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkMapEntry)(this._field, key, value);\n            if (err) {\n                throw err;\n            }\n        }\n        this.obj[mapKeyToLocal(key)] = mapValueToLocal(this._field, value);\n        return this;\n    }\n    delete(key) {\n        const k = mapKeyToLocal(key);\n        const has = Object.prototype.hasOwnProperty.call(this.obj, k);\n        if (has) {\n            delete this.obj[k];\n        }\n        return has;\n    }\n    clear() {\n        for (const key of Object.keys(this.obj)) {\n            delete this.obj[key];\n        }\n    }\n    get(key) {\n        let val = this.obj[mapKeyToLocal(key)];\n        if (val !== undefined) {\n            val = mapValueToReflect(this._field, val, this.check);\n        }\n        return val;\n    }\n    has(key) {\n        return Object.prototype.hasOwnProperty.call(this.obj, mapKeyToLocal(key));\n    }\n    *keys() {\n        for (const objKey of Object.keys(this.obj)) {\n            yield mapKeyToReflect(objKey, this._field.mapKey);\n        }\n    }\n    *entries() {\n        for (const objEntry of Object.entries(this.obj)) {\n            yield [\n                mapKeyToReflect(objEntry[0], this._field.mapKey),\n                mapValueToReflect(this._field, objEntry[1], this.check),\n            ];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    get size() {\n        return Object.keys(this.obj).length;\n    }\n    *values() {\n        for (const val of Object.values(this.obj)) {\n            yield mapValueToReflect(this._field, val, this.check);\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        for (const mapEntry of this.entries()) {\n            callbackfn.call(thisArg, mapEntry[1], mapEntry[0], this);\n        }\n    }\n}\nfunction messageToLocal(field, value) {\n    if (!(0, guard_js_1.isReflectMessage)(value)) {\n        return value;\n    }\n    if ((0, wrappers_js_1.isWrapper)(value.message) &&\n        !field.oneof &&\n        field.fieldKind == \"message\") {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return value.message.value;\n    }\n    if (value.desc.typeName == \"google.protobuf.Struct\" &&\n        field.parent.typeName != \"google.protobuf.Value\") {\n        // google.protobuf.Struct is represented with JsonObject when used in a\n        // field, except when used in google.protobuf.Value.\n        return wktStructToLocal(value.message);\n    }\n    return value.message;\n}\nfunction messageToReflect(field, value, check) {\n    if (value !== undefined) {\n        if ((0, wrappers_js_1.isWrapperDesc)(field.message) &&\n            !field.oneof &&\n            field.fieldKind == \"message\") {\n            // Types from google/protobuf/wrappers.proto are unwrapped when used in\n            // a singular field that is not part of a oneof group.\n            value = {\n                $typeName: field.message.typeName,\n                value: longToReflect(field.message.fields[0], value),\n            };\n        }\n        else if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName != \"google.protobuf.Value\" &&\n            (0, guard_js_1.isObject)(value)) {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            value = wktStructToReflect(value);\n        }\n    }\n    return new ReflectMessageImpl(field.message, value, check);\n}\nfunction listItemToLocal(field, value) {\n    if (field.listKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction listItemToReflect(field, value, check) {\n    if (field.listKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return longToReflect(field, value);\n}\nfunction mapValueToLocal(field, value) {\n    if (field.mapKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction mapValueToReflect(field, value, check) {\n    if (field.mapKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return value;\n}\nfunction mapKeyToLocal(key) {\n    return typeof key == \"string\" || typeof key == \"number\" ? key : String(key);\n}\n/**\n * Converts a map key (any scalar value except float, double, or bytes) from its\n * representation in a message (string or number, the only possible object key\n * types) to the closest possible type in ECMAScript.\n */\nfunction mapKeyToReflect(key, type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return key;\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32: {\n            const n = Number.parseInt(key);\n            if (Number.isFinite(n)) {\n                return n;\n            }\n            break;\n        }\n        case descriptors_js_1.ScalarType.BOOL:\n            switch (key) {\n                case \"true\":\n                    return true;\n                case \"false\":\n                    return false;\n            }\n            break;\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            try {\n                return proto_int64_js_1.protoInt64.uParse(key);\n            }\n            catch (_a) {\n                //\n            }\n            break;\n        default:\n            // INT64, SFIXED64, SINT64\n            try {\n                return proto_int64_js_1.protoInt64.parse(key);\n            }\n            catch (_b) {\n                //\n            }\n            break;\n    }\n    return key;\n}\nfunction longToReflect(field, value) {\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.scalar) {\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = proto_int64_js_1.protoInt64.parse(value);\n            }\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = proto_int64_js_1.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction longToLocal(field, value) {\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.scalar) {\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = proto_int64_js_1.protoInt64.parse(value);\n            }\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = proto_int64_js_1.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction wktStructToReflect(json) {\n    const struct = {\n        $typeName: \"google.protobuf.Struct\",\n        fields: {},\n    };\n    if ((0, guard_js_1.isObject)(json)) {\n        for (const [k, v] of Object.entries(json)) {\n            struct.fields[k] = wktValueToReflect(v);\n        }\n    }\n    return struct;\n}\nfunction wktStructToLocal(val) {\n    const json = {};\n    for (const [k, v] of Object.entries(val.fields)) {\n        json[k] = wktValueToLocal(v);\n    }\n    return json;\n}\nfunction wktValueToLocal(val) {\n    switch (val.kind.case) {\n        case \"structValue\":\n            return wktStructToLocal(val.kind.value);\n        case \"listValue\":\n            return val.kind.value.values.map(wktValueToLocal);\n        case \"nullValue\":\n        case undefined:\n            return null;\n        default:\n            return val.kind.value;\n    }\n}\nfunction wktValueToReflect(json) {\n    const value = {\n        $typeName: \"google.protobuf.Value\",\n        kind: { case: undefined },\n    };\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- invalid input is unselected kind\n    switch (typeof json) {\n        case \"number\":\n            value.kind = { case: \"numberValue\", value: json };\n            break;\n        case \"string\":\n            value.kind = { case: \"stringValue\", value: json };\n            break;\n        case \"boolean\":\n            value.kind = { case: \"boolValue\", value: json };\n            break;\n        case \"object\":\n            if (json === null) {\n                const nullValue = 0;\n                value.kind = { case: \"nullValue\", value: nullValue };\n            }\n            else if (Array.isArray(json)) {\n                const listValue = {\n                    $typeName: \"google.protobuf.ListValue\",\n                    values: [],\n                };\n                if (Array.isArray(json)) {\n                    for (const e of json) {\n                        listValue.values.push(wktValueToReflect(e));\n                    }\n                }\n                value.kind = {\n                    case: \"listValue\",\n                    value: listValue,\n                };\n            }\n            else {\n                value.kind = {\n                    case: \"structValue\",\n                    value: wktStructToReflect(json),\n                };\n            }\n            break;\n    }\n    return value;\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBinary = toBinary;\nexports.writeField = writeField;\nconst reflect_js_1 = require(\"./reflect/reflect.js\");\nconst binary_encoding_js_1 = require(\"./wire/binary-encoding.js\");\nconst descriptors_js_1 = require(\"./descriptors.js\");\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n};\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction toBinary(schema, message, options) {\n    return writeFields(new binary_encoding_js_1.BinaryWriter(), makeWriteOptions(options), (0, reflect_js_1.reflect)(schema, message)).finish();\n}\nfunction writeFields(writer, opts, msg) {\n    var _a;\n    for (const f of msg.sortedFields) {\n        if (!msg.isSet(f)) {\n            if (f.presence == LEGACY_REQUIRED) {\n                throw new Error(`cannot encode field ${msg.desc.typeName}.${f.name} to binary: required field not set`);\n            }\n            continue;\n        }\n        writeField(writer, opts, msg, f);\n    }\n    if (opts.writeUnknownFields) {\n        for (const { no, wireType, data } of (_a = msg.getUnknown()) !== null && _a !== void 0 ? _a : []) {\n            writer.tag(no, wireType).raw(data);\n        }\n    }\n    return writer;\n}\n/**\n * @private\n */\nfunction writeField(writer, opts, msg, field) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32, field.number, msg.get(field));\n            break;\n        case \"list\":\n            writeListField(writer, opts, field, msg.get(field));\n            break;\n        case \"message\":\n            writeMessageField(writer, opts, field, msg.get(field));\n            break;\n        case \"map\":\n            for (const [key, val] of msg.get(field)) {\n                writeMapEntry(writer, opts, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeScalar(writer, scalarType, fieldNo, value) {\n    writeScalarValue(writer.tag(fieldNo, writeTypeOfScalar(scalarType)), scalarType, value);\n}\nfunction writeMessageField(writer, opts, field, message) {\n    if (field.delimitedEncoding) {\n        writeFields(writer.tag(field.number, binary_encoding_js_1.WireType.StartGroup), opts, message).tag(field.number, binary_encoding_js_1.WireType.EndGroup);\n    }\n    else {\n        writeFields(writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork(), opts, message).join();\n    }\n}\nfunction writeListField(writer, opts, field, list) {\n    var _a;\n    if (field.listKind == \"message\") {\n        for (const item of list) {\n            writeMessageField(writer, opts, field, item);\n        }\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32;\n    if (field.packed) {\n        if (!list.size) {\n            return;\n        }\n        writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork();\n        for (const item of list) {\n            writeScalarValue(writer, scalarType, item);\n        }\n        writer.join();\n        return;\n    }\n    for (const item of list) {\n        writeScalar(writer, scalarType, field.number, item);\n    }\n}\nfunction writeMapEntry(writer, opts, field, key, value) {\n    var _a;\n    writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork();\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.mapKey, 1, key);\n    // write value, expecting value field number = 2\n    switch (field.mapKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            writeFields(writer.tag(2, binary_encoding_js_1.WireType.LengthDelimited).fork(), opts, value).join();\n            break;\n    }\n    writer.join();\n}\nfunction writeScalarValue(writer, type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            writer.string(value);\n            break;\n        case descriptors_js_1.ScalarType.BOOL:\n            writer.bool(value);\n            break;\n        case descriptors_js_1.ScalarType.DOUBLE:\n            writer.double(value);\n            break;\n        case descriptors_js_1.ScalarType.FLOAT:\n            writer.float(value);\n            break;\n        case descriptors_js_1.ScalarType.INT32:\n            writer.int32(value);\n            break;\n        case descriptors_js_1.ScalarType.INT64:\n            writer.int64(value);\n            break;\n        case descriptors_js_1.ScalarType.UINT64:\n            writer.uint64(value);\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n            writer.fixed64(value);\n            break;\n        case descriptors_js_1.ScalarType.BYTES:\n            writer.bytes(value);\n            break;\n        case descriptors_js_1.ScalarType.FIXED32:\n            writer.fixed32(value);\n            break;\n        case descriptors_js_1.ScalarType.SFIXED32:\n            writer.sfixed32(value);\n            break;\n        case descriptors_js_1.ScalarType.SFIXED64:\n            writer.sfixed64(value);\n            break;\n        case descriptors_js_1.ScalarType.SINT64:\n            writer.sint64(value);\n            break;\n        case descriptors_js_1.ScalarType.UINT32:\n            writer.uint32(value);\n            break;\n        case descriptors_js_1.ScalarType.SINT32:\n            writer.sint32(value);\n            break;\n    }\n}\nfunction writeTypeOfScalar(type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.BYTES:\n        case descriptors_js_1.ScalarType.STRING:\n            return binary_encoding_js_1.WireType.LengthDelimited;\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return binary_encoding_js_1.WireType.Bit64;\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.FLOAT:\n            return binary_encoding_js_1.WireType.Bit32;\n        default:\n            return binary_encoding_js_1.WireType.Varint;\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBinary = fromBinary;\nexports.mergeFromBinary = mergeFromBinary;\nexports.readField = readField;\nconst descriptors_js_1 = require(\"./descriptors.js\");\nconst scalar_js_1 = require(\"./reflect/scalar.js\");\nconst reflect_js_1 = require(\"./reflect/reflect.js\");\nconst binary_encoding_js_1 = require(\"./wire/binary-encoding.js\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\n/**\n * Parse serialized binary data.\n */\nfunction fromBinary(schema, bytes, options) {\n    const msg = (0, reflect_js_1.reflect)(schema, undefined, false);\n    readMessage(msg, new binary_encoding_js_1.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return msg.message;\n}\n/**\n * Parse from binary data, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nfunction mergeFromBinary(schema, target, bytes, options) {\n    readMessage((0, reflect_js_1.reflect)(schema, target, false), new binary_encoding_js_1.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return target;\n}\n/**\n * If `delimited` is false, read the length given in `lengthOrDelimitedFieldNo`.\n *\n * If `delimited` is true, read until an EndGroup tag. `lengthOrDelimitedFieldNo`\n * is the expected field number.\n *\n * @private\n */\nfunction readMessage(message, reader, options, delimited, lengthOrDelimitedFieldNo) {\n    var _a;\n    const end = delimited ? reader.len : reader.pos + lengthOrDelimitedFieldNo;\n    let fieldNo, wireType;\n    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n    while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimited && wireType == binary_encoding_js_1.WireType.EndGroup) {\n            break;\n        }\n        const field = message.findNumber(fieldNo);\n        if (!field) {\n            const data = reader.skip(wireType, fieldNo);\n            if (options.readUnknownFields) {\n                unknownFields.push({ no: fieldNo, wireType, data });\n            }\n            continue;\n        }\n        readField(message, reader, field, wireType, options);\n    }\n    if (delimited) {\n        if (wireType != binary_encoding_js_1.WireType.EndGroup || fieldNo !== lengthOrDelimitedFieldNo) {\n            throw new Error(`invalid end group tag`);\n        }\n    }\n    if (unknownFields.length > 0) {\n        message.setUnknown(unknownFields);\n    }\n}\n/**\n * @private\n */\nfunction readField(message, reader, field, wireType, options) {\n    switch (field.fieldKind) {\n        case \"scalar\":\n            message.set(field, readScalar(reader, field.scalar));\n            break;\n        case \"enum\":\n            message.set(field, readScalar(reader, descriptors_js_1.ScalarType.INT32));\n            break;\n        case \"message\":\n            message.set(field, readMessageField(reader, options, field, message.get(field)));\n            break;\n        case \"list\":\n            readListField(reader, wireType, message.get(field), options);\n            break;\n        case \"map\":\n            readMapEntry(reader, message.get(field), options);\n            break;\n    }\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(reader, map, options) {\n    const field = map.field();\n    let key, val;\n    const end = reader.pos + reader.uint32();\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.mapKey);\n                break;\n            case 2:\n                switch (field.mapKind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.scalar);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, options, field);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = (0, scalar_js_1.scalarZeroValue)(field.mapKey, false);\n    }\n    if (val === undefined) {\n        switch (field.mapKind) {\n            case \"scalar\":\n                val = (0, scalar_js_1.scalarZeroValue)(field.scalar, false);\n                break;\n            case \"enum\":\n                val = field.enum.values[0].number;\n                break;\n            case \"message\":\n                val = (0, reflect_js_1.reflect)(field.message, undefined, false);\n                break;\n        }\n    }\n    map.set(key, val);\n}\nfunction readListField(reader, wireType, list, options) {\n    var _a;\n    const field = list.field();\n    if (field.listKind === \"message\") {\n        list.add(readMessageField(reader, options, field));\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32;\n    const packed = wireType == binary_encoding_js_1.WireType.LengthDelimited &&\n        scalarType != descriptors_js_1.ScalarType.STRING &&\n        scalarType != descriptors_js_1.ScalarType.BYTES;\n    if (!packed) {\n        list.add(readScalar(reader, scalarType));\n        return;\n    }\n    const e = reader.uint32() + reader.pos;\n    while (reader.pos < e) {\n        list.add(readScalar(reader, scalarType));\n    }\n}\nfunction readMessageField(reader, options, field, mergeMessage) {\n    const delimited = field.delimitedEncoding;\n    const message = mergeMessage !== null && mergeMessage !== void 0 ? mergeMessage : (0, reflect_js_1.reflect)(field.message, undefined, false);\n    readMessage(message, reader, options, delimited, delimited ? field.number : reader.uint32());\n    return message;\n}\nfunction readScalar(reader, type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return reader.string();\n        case descriptors_js_1.ScalarType.BOOL:\n            return reader.bool();\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return reader.double();\n        case descriptors_js_1.ScalarType.FLOAT:\n            return reader.float();\n        case descriptors_js_1.ScalarType.INT32:\n            return reader.int32();\n        case descriptors_js_1.ScalarType.INT64:\n            return reader.int64();\n        case descriptors_js_1.ScalarType.UINT64:\n            return reader.uint64();\n        case descriptors_js_1.ScalarType.FIXED64:\n            return reader.fixed64();\n        case descriptors_js_1.ScalarType.BYTES:\n            return reader.bytes();\n        case descriptors_js_1.ScalarType.FIXED32:\n            return reader.fixed32();\n        case descriptors_js_1.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case descriptors_js_1.ScalarType.SINT64:\n            return reader.sint64();\n        case descriptors_js_1.ScalarType.UINT32:\n            return reader.uint32();\n        case descriptors_js_1.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sizeDelimitedEncode = sizeDelimitedEncode;\nexports.sizeDelimitedDecodeStream = sizeDelimitedDecodeStream;\nexports.sizeDelimitedPeek = sizeDelimitedPeek;\nconst to_binary_js_1 = require(\"../to-binary.js\");\nconst binary_encoding_js_1 = require(\"./binary-encoding.js\");\nconst from_binary_js_1 = require(\"../from-binary.js\");\n/**\n * Serialize a message, prefixing it with its size.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nfunction sizeDelimitedEncode(messageDesc, message, options) {\n    const writer = new binary_encoding_js_1.BinaryWriter();\n    writer.bytes((0, to_binary_js_1.toBinary)(messageDesc, message, options));\n    return writer.finish();\n}\n/**\n * Parse a stream of size-delimited messages.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nfunction sizeDelimitedDecodeStream(messageDesc, iterable, options) {\n    return __asyncGenerator(this, arguments, function* sizeDelimitedDecodeStream_1() {\n        var _a, e_1, _b, _c;\n        // append chunk to buffer, returning updated buffer\n        function append(buffer, chunk) {\n            const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n            n.set(buffer);\n            n.set(chunk, buffer.length);\n            return n;\n        }\n        let buffer = new Uint8Array(0);\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                _c = iterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                buffer = append(buffer, chunk);\n                for (;;) {\n                    const size = sizeDelimitedPeek(buffer);\n                    if (size.eof) {\n                        // size is incomplete, buffer more data\n                        break;\n                    }\n                    if (size.offset + size.size > buffer.byteLength) {\n                        // message is incomplete, buffer more data\n                        break;\n                    }\n                    yield yield __await((0, from_binary_js_1.fromBinary)(messageDesc, buffer.subarray(size.offset, size.offset + size.size), options));\n                    buffer = buffer.subarray(size.offset + size.size);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (buffer.byteLength > 0) {\n            throw new Error(\"incomplete data\");\n        }\n    });\n}\n/**\n * Decodes the size from the given size-delimited message, which may be\n * incomplete.\n *\n * Returns an object with the following properties:\n * - size: The size of the delimited message in bytes\n * - offset: The offset in the given byte array where the message starts\n * - eof: true\n *\n * If the size-delimited data does not include all bytes of the varint size,\n * the following object is returned:\n * - size: null\n * - offset: null\n * - eof: false\n *\n * This function can be used to implement parsing of size-delimited messages\n * from a stream.\n */\nfunction sizeDelimitedPeek(data) {\n    const sizeEof = { eof: true, size: null, offset: null };\n    for (let i = 0; i < 10; i++) {\n        if (i > data.byteLength) {\n            return sizeEof;\n        }\n        if ((data[i] & 0x80) == 0) {\n            const reader = new binary_encoding_js_1.BinaryReader(data);\n            let size;\n            try {\n                size = reader.uint32();\n            }\n            catch (e) {\n                if (e instanceof RangeError) {\n                    return sizeEof;\n                }\n                throw e;\n            }\n            return {\n                eof: false,\n                size,\n                offset: reader.pos,\n            };\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n", "\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./binary-encoding.js\"), exports);\n__exportStar(require(\"./base64-encoding.js\"), exports);\n__exportStar(require(\"./text-encoding.js\"), exports);\n__exportStar(require(\"./text-format.js\"), exports);\n__exportStar(require(\"./size-delimited.js\"), exports);\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.messageTypeRegistry = void 0;\nexports.messageTypeRegistry = new Map();\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\n// source: algorithm/schedule.proto\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Presentation = exports.Timeslot = exports.Schedule = void 0;\n/* eslint-disable */\nconst wire_1 = require(\"@bufbuild/protobuf/wire\");\nconst typeRegistry_1 = require(\"../typeRegistry\");\nfunction createBaseSchedule() {\n    return { $type: \"model.boid.Schedule\", timeslots: [] };\n}\nexports.Schedule = {\n    $type: \"model.boid.Schedule\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        for (const v of message.timeslots) {\n            exports.Timeslot.encode(v, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSchedule();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.timeslots.push(exports.Timeslot.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Schedule.$type,\n            timeslots: globalThis.Array.isArray(object?.timeslots)\n                ? object.timeslots.map((e) => exports.Timeslot.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.timeslots?.length) {\n            obj.timeslots = message.timeslots.map((e) => exports.Timeslot.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Schedule.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseSchedule();\n        message.timeslots = object.timeslots?.map((e) => exports.Timeslot.fromPartial(e)) || [];\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Schedule.$type, exports.Schedule);\nfunction createBaseTimeslot() {\n    return { $type: \"model.boid.Timeslot\", id: \"\", presentation: undefined };\n}\nexports.Timeslot = {\n    $type: \"model.boid.Timeslot\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.presentation !== undefined) {\n            exports.Presentation.encode(message.presentation, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTimeslot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.presentation = exports.Presentation.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Timeslot.$type,\n            id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n            presentation: isSet(object.presentation) ? exports.Presentation.fromJSON(object.presentation) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.id !== \"\") {\n            obj.id = message.id;\n        }\n        if (message.presentation !== undefined) {\n            obj.presentation = exports.Presentation.toJSON(message.presentation);\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Timeslot.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseTimeslot();\n        message.id = object.id ?? \"\";\n        message.presentation = (object.presentation !== undefined && object.presentation !== null)\n            ? exports.Presentation.fromPartial(object.presentation)\n            : undefined;\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Timeslot.$type, exports.Timeslot);\nfunction createBasePresentation() {\n    return { $type: \"model.boid.Presentation\", id: \"\", label: \"\" };\n}\nexports.Presentation = {\n    $type: \"model.boid.Presentation\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.label !== \"\") {\n            writer.uint32(18).string(message.label);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePresentation();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.label = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Presentation.$type,\n            id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n            label: isSet(object.label) ? globalThis.String(object.label) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.id !== \"\") {\n            obj.id = message.id;\n        }\n        if (message.label !== \"\") {\n            obj.label = message.label;\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Presentation.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePresentation();\n        message.id = object.id ?? \"\";\n        message.label = object.label ?? \"\";\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Presentation.$type, exports.Presentation);\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\n// source: common/authenticate.proto\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Authenticate = void 0;\n/* eslint-disable */\nconst wire_1 = require(\"@bufbuild/protobuf/wire\");\nconst typeRegistry_1 = require(\"../typeRegistry\");\nfunction createBaseAuthenticate() {\n    return { $type: \"model.boid.Authenticate\", id: \"\" };\n}\nexports.Authenticate = {\n    $type: \"model.boid.Authenticate\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAuthenticate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { $type: exports.Authenticate.$type, id: isSet(object.id) ? globalThis.String(object.id) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.id !== \"\") {\n            obj.id = message.id;\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Authenticate.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseAuthenticate();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Authenticate.$type, exports.Authenticate);\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\n// source: common/rule.proto\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rule = void 0;\n/* eslint-disable */\nconst wire_1 = require(\"@bufbuild/protobuf/wire\");\nconst typeRegistry_1 = require(\"../typeRegistry\");\nfunction createBaseRule() {\n    return { $type: \"model.boid.Rule\", head: 0, complement: 0 };\n}\nexports.Rule = {\n    $type: \"model.boid.Rule\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.head !== 0) {\n            writer.uint32(8).int32(message.head);\n        }\n        if (message.complement !== 0) {\n            writer.uint32(16).int32(message.complement);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRule();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.head = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.complement = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Rule.$type,\n            head: isSet(object.head) ? globalThis.Number(object.head) : 0,\n            complement: isSet(object.complement) ? globalThis.Number(object.complement) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.head !== 0) {\n            obj.head = Math.round(message.head);\n        }\n        if (message.complement !== 0) {\n            obj.complement = Math.round(message.complement);\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Rule.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseRule();\n        message.head = object.head ?? 0;\n        message.complement = object.complement ?? 0;\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Rule.$type, exports.Rule);\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\n// source: common/world.proto\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Person_PhoneNumber = exports.Person = exports.Person_PhoneType = void 0;\nexports.person_PhoneTypeFromJSON = person_PhoneTypeFromJSON;\nexports.person_PhoneTypeToJSON = person_PhoneTypeToJSON;\n/* eslint-disable */\nconst wire_1 = require(\"@bufbuild/protobuf/wire\");\nconst typeRegistry_1 = require(\"../typeRegistry\");\nvar Person_PhoneType;\n(function (Person_PhoneType) {\n    Person_PhoneType[Person_PhoneType[\"PHONE_TYPE_UNSPECIFIED\"] = 0] = \"PHONE_TYPE_UNSPECIFIED\";\n    Person_PhoneType[Person_PhoneType[\"PHONE_TYPE_MOBILE\"] = 1] = \"PHONE_TYPE_MOBILE\";\n    Person_PhoneType[Person_PhoneType[\"PHONE_TYPE_HOME\"] = 2] = \"PHONE_TYPE_HOME\";\n    Person_PhoneType[Person_PhoneType[\"PHONE_TYPE_WORK\"] = 3] = \"PHONE_TYPE_WORK\";\n    Person_PhoneType[Person_PhoneType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Person_PhoneType || (exports.Person_PhoneType = Person_PhoneType = {}));\nfunction person_PhoneTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PHONE_TYPE_UNSPECIFIED\":\n            return Person_PhoneType.PHONE_TYPE_UNSPECIFIED;\n        case 1:\n        case \"PHONE_TYPE_MOBILE\":\n            return Person_PhoneType.PHONE_TYPE_MOBILE;\n        case 2:\n        case \"PHONE_TYPE_HOME\":\n            return Person_PhoneType.PHONE_TYPE_HOME;\n        case 3:\n        case \"PHONE_TYPE_WORK\":\n            return Person_PhoneType.PHONE_TYPE_WORK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Person_PhoneType.UNRECOGNIZED;\n    }\n}\nfunction person_PhoneTypeToJSON(object) {\n    switch (object) {\n        case Person_PhoneType.PHONE_TYPE_UNSPECIFIED:\n            return \"PHONE_TYPE_UNSPECIFIED\";\n        case Person_PhoneType.PHONE_TYPE_MOBILE:\n            return \"PHONE_TYPE_MOBILE\";\n        case Person_PhoneType.PHONE_TYPE_HOME:\n            return \"PHONE_TYPE_HOME\";\n        case Person_PhoneType.PHONE_TYPE_WORK:\n            return \"PHONE_TYPE_WORK\";\n        case Person_PhoneType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nfunction createBasePerson() {\n    return { $type: \"model.boid.Person\", name: \"\", id: 0, email: \"\", phones: [] };\n}\nexports.Person = {\n    $type: \"model.boid.Person\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).int32(message.id);\n        }\n        if (message.email !== \"\") {\n            writer.uint32(26).string(message.email);\n        }\n        for (const v of message.phones) {\n            exports.Person_PhoneNumber.encode(v, writer.uint32(34).fork()).join();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerson();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.name = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.id = reader.int32();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.email = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.phones.push(exports.Person_PhoneNumber.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Person.$type,\n            name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n            id: isSet(object.id) ? globalThis.Number(object.id) : 0,\n            email: isSet(object.email) ? globalThis.String(object.email) : \"\",\n            phones: globalThis.Array.isArray(object?.phones)\n                ? object.phones.map((e) => exports.Person_PhoneNumber.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.name !== \"\") {\n            obj.name = message.name;\n        }\n        if (message.id !== 0) {\n            obj.id = Math.round(message.id);\n        }\n        if (message.email !== \"\") {\n            obj.email = message.email;\n        }\n        if (message.phones?.length) {\n            obj.phones = message.phones.map((e) => exports.Person_PhoneNumber.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Person.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePerson();\n        message.name = object.name ?? \"\";\n        message.id = object.id ?? 0;\n        message.email = object.email ?? \"\";\n        message.phones = object.phones?.map((e) => exports.Person_PhoneNumber.fromPartial(e)) || [];\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Person.$type, exports.Person);\nfunction createBasePerson_PhoneNumber() {\n    return { $type: \"model.boid.Person.PhoneNumber\", number: \"\", type: 0 };\n}\nexports.Person_PhoneNumber = {\n    $type: \"model.boid.Person.PhoneNumber\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        if (message.number !== \"\") {\n            writer.uint32(10).string(message.number);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerson_PhoneNumber();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.number = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.type = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.Person_PhoneNumber.$type,\n            number: isSet(object.number) ? globalThis.String(object.number) : \"\",\n            type: isSet(object.type) ? person_PhoneTypeFromJSON(object.type) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.number !== \"\") {\n            obj.number = message.number;\n        }\n        if (message.type !== 0) {\n            obj.type = person_PhoneTypeToJSON(message.type);\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.Person_PhoneNumber.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBasePerson_PhoneNumber();\n        message.number = object.number ?? \"\";\n        message.type = object.type ?? 0;\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.Person_PhoneNumber.$type, exports.Person_PhoneNumber);\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n", "\"use strict\";\n// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.0.2\n//   protoc               v5.27.2\n// source: llm/llm_rules_output.proto\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LLMRulesOuput = void 0;\n/* eslint-disable */\nconst wire_1 = require(\"@bufbuild/protobuf/wire\");\nconst typeRegistry_1 = require(\"../typeRegistry\");\nfunction createBaseLLMRulesOuput() {\n    return { $type: \"model.boid.LLMRulesOuput\", rules: [] };\n}\nexports.LLMRulesOuput = {\n    $type: \"model.boid.LLMRulesOuput\",\n    encode(message, writer = new wire_1.BinaryWriter()) {\n        for (const v of message.rules) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLLMRulesOuput();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.rules.push(reader.string());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            $type: exports.LLMRulesOuput.$type,\n            rules: globalThis.Array.isArray(object?.rules) ? object.rules.map((e) => globalThis.String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rules?.length) {\n            obj.rules = message.rules;\n        }\n        return obj;\n    },\n    create(base) {\n        return exports.LLMRulesOuput.fromPartial(base ?? {});\n    },\n    fromPartial(object) {\n        const message = createBaseLLMRulesOuput();\n        message.rules = object.rules?.map((e) => e) || [];\n        return message;\n    },\n};\ntypeRegistry_1.messageTypeRegistry.set(exports.LLMRulesOuput.$type, exports.LLMRulesOuput);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.messageTypeRegistry = exports.LLMRulesOuput = exports.Person_PhoneNumber = exports.Person_PhoneType = exports.Person = exports.Rule = exports.Authenticate = exports.Presentation = exports.Timeslot = exports.Schedule = void 0;\nvar schedule_1 = require(\"./algorithm/schedule\");\nObject.defineProperty(exports, \"Schedule\", { enumerable: true, get: function () { return schedule_1.Schedule; } });\nvar schedule_2 = require(\"./algorithm/schedule\");\nObject.defineProperty(exports, \"Timeslot\", { enumerable: true, get: function () { return schedule_2.Timeslot; } });\nvar schedule_3 = require(\"./algorithm/schedule\");\nObject.defineProperty(exports, \"Presentation\", { enumerable: true, get: function () { return schedule_3.Presentation; } });\nvar authenticate_1 = require(\"./common/authenticate\");\nObject.defineProperty(exports, \"Authenticate\", { enumerable: true, get: function () { return authenticate_1.Authenticate; } });\nvar rule_1 = require(\"./common/rule\");\nObject.defineProperty(exports, \"Rule\", { enumerable: true, get: function () { return rule_1.Rule; } });\nvar world_1 = require(\"./common/world\");\nObject.defineProperty(exports, \"Person\", { enumerable: true, get: function () { return world_1.Person; } });\nvar world_2 = require(\"./common/world\");\nObject.defineProperty(exports, \"Person_PhoneType\", { enumerable: true, get: function () { return world_2.Person_PhoneType; } });\nvar world_3 = require(\"./common/world\");\nObject.defineProperty(exports, \"Person_PhoneNumber\", { enumerable: true, get: function () { return world_3.Person_PhoneNumber; } });\nvar llm_rules_output_1 = require(\"./llm/llm_rules_output\");\nObject.defineProperty(exports, \"LLMRulesOuput\", { enumerable: true, get: function () { return llm_rules_output_1.LLMRulesOuput; } });\nvar typeRegistry_1 = require(\"./typeRegistry\");\nObject.defineProperty(exports, \"messageTypeRegistry\", { enumerable: true, get: function () { return typeRegistry_1.messageTypeRegistry; } });\n", "import { Authenticate } from 'BOID-model';\n\nasync function Boot() {\n  console.log('Booting websocket connection!');\n  const socket = new WebSocket('ws://localhost:8081');\n  const id = window.crypto.randomUUID();\n\n  socket.addEventListener('open', () => {\n    console.log('Connected to websocket server!');\n\n    const payload = Authenticate.create({ id });\n\n    socket.send(\n      JSON.stringify({\n        event: 'authenticate',\n        data: Array.from(Authenticate.encode(payload).finish()),\n      }),\n    );\n\n    console.log(`Authentivated with id ${id}`);\n  });\n\n  socket.addEventListener('error', (ev) => {\n    console.error(ev);\n  });\n}\n\nBoot();\n"],
  "mappings": "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",
  "names": ["require_varint", "__commonJSMin", "exports", "varint64read", "varint64write", "int64FromString", "int64ToString", "uInt64ToString", "varint32write", "varint32read", "lowBits", "highBits", "shift", "b", "middleByte", "lo", "hi", "bytes", "hasNext", "byte", "splitBits", "hasMoreBits", "TWO_PWR_32_DBL", "dec", "minus", "base", "add1e6digit", "begin", "end", "digit1e6", "negate", "newBits", "bits", "negative", "result", "toUnsigned", "low", "mid", "high", "digitA", "digitB", "digitC", "decimalFrom1e7WithLeadingZeros", "digit1e7", "partial", "value", "i", "readBytes", "require_proto_int64", "__commonJSMin", "exports", "varint_js_1", "makeInt64Support", "dv", "MIN", "MAX", "UMIN", "UMAX", "value", "bi", "lo", "hi", "assertInt64String", "assertUInt64String", "require_text_encoding", "__commonJSMin", "exports", "configureTextEncoding", "getTextEncoding", "symbol", "textEncoding", "te", "td", "text", "bytes", "require_binary_encoding", "__commonJSMin", "exports", "varint_js_1", "proto_int64_js_1", "text_encoding_js_1", "WireType", "BinaryWriter", "encodeUtf8", "len", "i", "bytes", "offset", "chunk", "prev", "fieldNo", "type", "value", "assertUInt32", "assertInt32", "assertFloat32", "view", "tc", "sign", "lo", "hi", "BinaryReader", "buf", "decodeUtf8", "tag", "wireType", "start", "fn", "wt", "zze", "s", "arg", "o", "require_base64_encoding", "__commonJSMin", "exports", "base64Decode", "base64Encode", "base64Str", "table", "getDecodeTable", "es", "bytes", "bytePos", "groupPos", "b", "p", "i", "encoding", "getEncodeTable", "pad", "base64", "encodeTableStd", "encodeTableUrl", "decodeTable", "encodeTable", "require_descriptors", "__commonJSMin", "exports", "ScalarType", "require_text_format", "__commonJSMin", "exports", "parseTextFormatEnumValue", "parseTextFormatScalarValue", "descriptors_js_1", "proto_int64_js_1", "descEnum", "value", "enumValue", "v", "type", "u", "unescapeBytesDefaultValue", "str", "b", "input", "r", "s", "t", "n", "chunk", "tc", "view", "require_is_message", "__commonJSMin", "exports", "isMessage", "arg", "schema", "require_error", "__commonJSMin", "exports", "isFieldError", "errorNames", "FieldError", "fieldOrOneof", "message", "name", "arg", "require_scalar", "__commonJSMin", "exports", "scalarEquals", "scalarZeroValue", "isScalarZeroValue", "proto_int64_js_1", "descriptors_js_1", "type", "a", "b", "i", "longAsString", "value", "require_unsafe", "__commonJSMin", "exports", "unsafeOneofCase", "unsafeIsSet", "unsafeIsSetExplicit", "unsafeGet", "unsafeSet", "unsafeClear", "scalar_js_1", "IMPLICIT", "target", "oneof", "c", "f", "field", "name", "localName", "value", "oneofLocalName", "require_guard", "__commonJSMin", "exports", "isObject", "isOneofADT", "isReflectList", "isReflectMap", "isReflectMessage", "unsafe_js_1", "arg", "field", "_a", "_b", "_c", "_d", "b", "messageDesc", "require_reflect_check", "__commonJSMin", "exports", "checkField", "checkListItem", "checkMapEntry", "formatVal", "descriptors_js_1", "is_message_js_1", "error_js_1", "guard_js_1", "binary_encoding_js_1", "text_encoding_js_1", "proto_int64_js_1", "field", "value", "check", "checkSingular", "reason", "formatReflectList", "formatReflectMap", "reasonSingular", "index", "key", "checkKey", "checkScalarValue", "checkVal", "v", "scalar", "val", "details", "scalarTypeDescription", "formatReflectMessage", "desc", "require_wrappers", "__commonJSMin", "exports", "isWrapper", "isWrapperDesc", "arg", "isWrapperTypeName", "messageDesc", "f", "name", "require_create", "__commonJSMin", "exports", "create", "is_message_js_1", "descriptors_js_1", "scalar_js_1", "guard_js_1", "unsafe_js_1", "wrappers_js_1", "EDITION_PROTO3", "EDITION_PROTO2", "IMPLICIT", "schema", "init", "message", "createZeroMessage", "initMessage", "messageDesc", "member", "value", "field", "oneofField", "toMessage", "initScalar", "initList", "initMap", "toU8Arr", "convertObjectValues", "val", "item", "obj", "fn", "ret", "entry", "tokenZeroMessageField", "messagePrototypes", "desc", "msg", "needsPrototypeChain", "cached", "prototype", "members", "createZeroField", "f", "defaultValue", "require_reflect", "__commonJSMin", "exports", "reflect", "reflectList", "reflectMap", "descriptors_js_1", "reflect_check_js_1", "error_js_1", "unsafe_js_1", "create_js_1", "wrappers_js_1", "scalar_js_1", "proto_int64_js_1", "guard_js_1", "messageDesc", "message", "check", "ReflectMessageImpl", "_a", "a", "b", "number", "f", "oneof", "assertOwn", "field", "value", "list", "ReflectListImpl", "map", "ReflectMapImpl", "messageToReflect", "longToReflect", "err", "local", "messageToLocal", "longToLocal", "owner", "member", "unsafeInput", "index", "item", "listItemToReflect", "listItemToLocal", "i", "key", "mapKeyToLocal", "mapValueToLocal", "k", "has", "val", "mapValueToReflect", "objKey", "mapKeyToReflect", "objEntry", "callbackfn", "thisArg", "mapEntry", "wktStructToLocal", "wktStructToReflect", "type", "n", "json", "struct", "v", "wktValueToReflect", "wktValueToLocal", "listValue", "e", "require_to_binary", "__commonJSMin", "exports", "toBinary", "writeField", "reflect_js_1", "binary_encoding_js_1", "descriptors_js_1", "LEGACY_REQUIRED", "writeDefaults", "makeWriteOptions", "options", "schema", "message", "writeFields", "writer", "opts", "msg", "_a", "f", "no", "wireType", "data", "field", "writeScalar", "writeListField", "writeMessageField", "key", "val", "writeMapEntry", "scalarType", "fieldNo", "value", "writeScalarValue", "writeTypeOfScalar", "list", "item", "type", "require_from_binary", "__commonJSMin", "exports", "fromBinary", "mergeFromBinary", "readField", "descriptors_js_1", "scalar_js_1", "reflect_js_1", "binary_encoding_js_1", "readDefaults", "makeReadOptions", "options", "schema", "bytes", "msg", "readMessage", "target", "message", "reader", "delimited", "lengthOrDelimitedFieldNo", "_a", "end", "fieldNo", "wireType", "unknownFields", "field", "data", "readScalar", "readMessageField", "readListField", "readMapEntry", "map", "key", "val", "list", "scalarType", "e", "mergeMessage", "type", "require_size_delimited", "__commonJSMin", "exports", "__asyncValues", "o", "m", "i", "verb", "n", "v", "resolve", "reject", "settle", "d", "__await", "__asyncGenerator", "thisArg", "_arguments", "generator", "g", "q", "awaitReturn", "f", "a", "b", "resume", "step", "e", "r", "fulfill", "value", "sizeDelimitedEncode", "sizeDelimitedDecodeStream", "sizeDelimitedPeek", "to_binary_js_1", "binary_encoding_js_1", "from_binary_js_1", "messageDesc", "message", "options", "writer", "iterable", "_a", "e_1", "_b", "_c", "append", "buffer", "chunk", "_d", "iterable_1", "iterable_1_1", "size", "e_1_1", "data", "sizeEof", "reader", "require_wire", "__commonJSMin", "exports", "__createBinding", "o", "m", "k", "k2", "desc", "__exportStar", "p", "require_typeRegistry", "__commonJSMin", "exports", "require_schedule", "__commonJSMin", "exports", "wire_1", "typeRegistry_1", "createBaseSchedule", "message", "writer", "v", "input", "length", "reader", "end", "tag", "object", "e", "obj", "base", "createBaseTimeslot", "isSet", "createBasePresentation", "value", "require_authenticate", "__commonJSMin", "exports", "wire_1", "typeRegistry_1", "createBaseAuthenticate", "message", "writer", "input", "length", "reader", "end", "tag", "object", "isSet", "obj", "base", "value", "require_rule", "__commonJSMin", "exports", "wire_1", "typeRegistry_1", "createBaseRule", "message", "writer", "input", "length", "reader", "end", "tag", "object", "isSet", "obj", "base", "value", "require_world", "__commonJSMin", "exports", "person_PhoneTypeFromJSON", "person_PhoneTypeToJSON", "wire_1", "typeRegistry_1", "Person_PhoneType", "object", "createBasePerson", "message", "writer", "v", "input", "length", "reader", "end", "tag", "isSet", "e", "obj", "base", "createBasePerson_PhoneNumber", "value", "require_llm_rules_output", "__commonJSMin", "exports", "wire_1", "typeRegistry_1", "createBaseLLMRulesOuput", "message", "writer", "v", "input", "length", "reader", "end", "tag", "object", "e", "obj", "base", "require_typescript", "__commonJSMin", "exports", "schedule_1", "schedule_2", "schedule_3", "authenticate_1", "rule_1", "world_1", "world_2", "world_3", "llm_rules_output_1", "typeRegistry_1", "import_BOID_model", "Boot", "socket", "id", "payload", "ev"]
}
